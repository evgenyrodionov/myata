import React from 'react';
import { StyleSheet, Animated } from 'react-native';
import styled from 'styled-components';
import ruLocale from 'date-fns/locale/ru';
import format from 'date-fns/format';
import * as Haptics from 'expo-haptics';
import Markdown from 'react-native-easy-markdown';

import Typograf from 'typograf';
import { elevationShadowStyle } from '../utils/shadow';
import * as animateScale from '../utils/animateScale';

const tp = new Typograf({ locale: ['ru', 'en-US'] });

const styles = StyleSheet.create({
  view: {
    ...elevationShadowStyle({
      elevation: 11,
      shadowColor: '#111',
      shadowOpacity: 0.3,
      shadowRadius: 5,
      shadowOffsetWidthMultiplier: 0.5,
      shadowOffsetHeightMultiplier: 0.5,
    }),
  },
});

const View = styled.View`
  border-radius: 10;
  background-color: #262626;
`;

const StCard = styled.View`
  padding-horizontal: 16;
  padding-top: 20;
  padding-bottom: 16;
  width: 100%;

  border-radius: 10;
  display: flex;
  flex-direction: column;
`;

const Header = styled.View`
  display: flex;
  flex-wrap: nowrap;
  flex-direction: row;
  justify-content: space-between;
`;

const Title = styled.Text`
  font-size: 32;
  line-height: 36;
  font-weight: 600;
  color: #fff;
  flex-basis: 70%;
`;

const Icon = styled.View`
  background-color: rgba(251, 196, 33, 0.2);
  border-radius: 56;
  padding-horizontal: 12;
  padding-vertical: 12;
  max-width: 52;
  max-height: 52;

  margin-left: 12;
`;

const IconText = styled.Text`
  font-size: 24;
  line-height: 26;
`;

const Description = styled(Markdown)`
  margin-top: 32;
`;

const Footer = styled.View`
  flex: 1;
  /* justify-content: space-between;
  flex-direction: row; */
  position: absolute;
  bottom: 8;
  left: 16;
`;

const DateHelper = styled.Text`
  font-size: 14;
  color: ${p => p.color};
  margin-top: 6;
`;

const TouchableOpacity = styled.TouchableOpacity``;

const defaultDateFormat = eventAt =>
  format(eventAt, 'DD MMMM –≤ HH:MM', { locale: ruLocale });

const tempDescriptions = {
  q6LH1HJbzblw8peq2Aqm:
    '–¢–æ, —á–µ–≥–æ –≤—ã —Ç–∞–∫ –∂–¥–∞–ª–∏ (–∏ –º—ã!) ‚Äî –Ω–∞—à –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫.\n\n–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –±—É–¥–µ–º —É–ª—É—á—à–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ —É–∂–µ ‚Äî –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú—è—Ç–Ω—É—é —Å–µ–º—å—é ü§ó',
  rqQSbkbZwMrXvt2tgEA6:
    '–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –º—ã –∑–∞–ø—É—Å—Ç–∏–º –∫—Ä—É—Ç–æ–π –º—è—Ç–Ω—ã–π —Å–∞–π—Ç. –ï—â–µ –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –Ω–∞—à–∏–º –≥–æ—Å—Ç—è–º!\n\n * –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ú—è—Ç—É –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤ –ª—é–±–æ–º —É–≥–æ–ª–∫–µ –†–æ—Å—Å–∏–∏\n * –£–¥–æ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –ú—è—Ç—ã\n * –í–µ—á–µ—Ä–∏–Ω–∫–∏ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è\n * –ê–Ω–æ–Ω—Å—ã —Å–æ–±—ã—Ç–∏–π\n * –§–∏—à–∫–∏ –∫–∞–∂–¥–æ–≥–æ –Ω–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è',
  fORadsDM2XBF8vxxUWRD:
    '* –ú—è—Ç–∞ Lounge –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ 200 –∑–∞–≤–µ–¥–µ–Ω–∏–π –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏ –∏ —Å—Ç—Ä–∞–Ω–∞–º –°–ù–ì\n* –ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü –Ω–∞—Å –ø–æ—Å–µ—â–∞—é—Ç –±–æ–ª–µ–µ 200 000 –≥–æ—Å—Ç–µ–π\n* –ú—ã –æ—Ç–∫—Ä—ã—Ç—ã –±–æ–ª–µ–µ, —á–µ–º –≤ 120 –≥–æ—Ä–æ–¥–∞x',
  TQki3q1eesZK1fna4YOK:
    '–î–∞, –º—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∏!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –≤—Å–µ–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Å–µ—Ç–∏ –≤ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ [@myata.official](https://instagram.com/myata.official)',
};

export default function EventCard({
  item,
  dateFormat = defaultDateFormat,
  onPress: parentOnPress = () => ({}),
}) {
  const scaleInAnimated = new Animated.Value(0);
  // const shadowElevationAnimated = new Animated.Value(11);

  function onPress() {
    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light).catch(() => {});

    parentOnPress();
  }

  return (
    <TouchableOpacity
      onPress={onPress}
      activeOpacity={1}
      onPressIn={() => animateScale.pressInAnimation(scaleInAnimated)}
      onPressOut={() => animateScale.pressOutAnimation(scaleInAnimated)}
      style={animateScale.getScaleTransformationStyle(scaleInAnimated)}
    >
      <Animated.View>
        <View style={[styles.view]}>
          <StCard>
            <Header>
              <Title>{item.title}</Title>
              <Icon>
                <IconText>‚≠ê</IconText>
              </Icon>
            </Header>
            <Description
              markdownStyles={{
                text: {
                  fontSize: 18,
                  lineHeight: 24,
                  fontWeight: '400',
                  color: 'rgba(255, 255, 255, 0.7)',
                },
              }}
            >
              {tempDescriptions[item.id]}
            </Description>
            <Footer>
              {item.eventAt && (
                <DateHelper color="#fff">{dateFormat(item.eventAt)}</DateHelper>
              )}
            </Footer>
          </StCard>
        </View>
      </Animated.View>
    </TouchableOpacity>
  );
}
