import React from 'react';
import styled from 'styled-components';
import orderBy from 'lodash/orderBy';
import format from 'date-fns/format';
import locale from 'date-fns/locale/ru';
import { QRCode } from 'react-native-custom-qr-codes';
import {
  Card as UICard,
  Title as OrigTitle,
  Title2 as OrigTitle2,
} from '../ui';
import logoImg from '../images/logo_512_with_padding.png';

const Title = styled(OrigTitle)`
  margin-bottom: 14;
`;

const Title2 = styled(OrigTitle2)`
  font-size: 32;
  line-height: 44;
  margin-bottom: 6;
  margin-top: 12;
`;

const FlatList = styled.FlatList`
  margin-bottom: 36;
`;

const Separator = styled.View`
  border-bottom-width: 1;
  border-bottom-color: rgba(255, 255, 255, 0.04);
  border-style: solid;
  margin-vertical: 8;
`;

const BalanceRow = styled.TouchableOpacity`
  display: flex;
  justify-content: space-between;
  flex-direction: row;
`;

const BalancePlace = styled.View``;

const BalancePlaceTitle = styled.Text`
  color: #fff;
  font-size: 24;
`;

const BonusesTitle = styled.Text`
  font-variant: tabular-nums;
  font-size: 24;
  color: #fff;
`;

const BonusesSubtitle = styled.Text`
  color: rgba(255, 255, 255, 0.4);
  margin-top: 4;
`;

function renderBalance({ item }) {
  return (
    <BalanceRow>
      <BalancePlace>
        <BalancePlaceTitle>{item.place.title}</BalancePlaceTitle>
        <BonusesSubtitle>{item.balance} –±–∞–ª–ª–æ–≤</BonusesSubtitle>
      </BalancePlace>

      <BonusesTitle>{item.cashback}%</BonusesTitle>
    </BalanceRow>
  );
}

const BalanceSt = styled.View`
  margin-bottom: 48;
`;

const BalanceDescription = styled.Text`
  color: rgba(255, 255, 255, 0.4);
  font-size: 14;
  margin-bottom: 16;
`;

const FAQ = styled.View`
  padding-horizontal: 16;
  padding-vertical: 16;
  background-color: #fff;
  border-radius: 10;
`;

const FAQTitle = styled(OrigTitle2)`
  font-size: 24;
  line-height: 33;
  margin-bottom: 10;
  margin-top: 0;
  color: #111;
`;

const FAQDescription = styled.Text`
  color: rgba(0, 0, 0, 0.6);
  font-size: 15;
  margin-bottom: 16;
`;

function renderFAQDescription({ superBalance }) {
  const first = superBalance[0];
  const exampleSum = 1000;
  const exampleCashback = first.cashback / 100;
  const superHalf = parseInt(exampleSum * exampleCashback * 0.7, 10);
  const commonHalf = parseInt(exampleSum * exampleCashback * 0.3, 10);

  return (
    <>
      –ü—Ä–∏–º–µ—Ä: —É&nbsp;–≤–∞—Å –∫—ç—à–±—ç–∫ {first.cashback}% –≤&nbsp;–ú—è—Ç–µ{' '}
      {first.place.title}, –ø—Ä–∏ —Å—á—ë—Ç–µ –Ω–∞&nbsp;{exampleSum} ‚ÇΩ –æ–±—â–∏–º–∏ –±—É–¥—É—Ç{' '}
      {commonHalf} –±–∞–ª–ª–æ–≤, –∞&nbsp;—Å—É–ø–µ—Ä-–±–∞–ª–ª–∞–º–∏&nbsp;‚Äî {superHalf}.
    </>
  );
}

function Balance({ user: { superBalance = [], balance, cashback } }) {
  const hasSuperBalance = superBalance.length > 0;

  const title = hasSuperBalance ? (
    <>
      –£&nbsp;–≤–∞—Å {balance} –æ–±—â–∏—Ö –±–∞–ª–ª–æ–≤ –∏&nbsp;{cashback}% –∫—ç—à–±—ç–∫–∞
    </>
  ) : (
    <>
      –£&nbsp;–≤–∞—Å {balance} –±–∞–ª–ª–æ–≤ –∏&nbsp;{cashback}% –∫—ç—à–±—ç–∫–∞
    </>
  );

  const description = hasSuperBalance ? (
    <>
      –û–±—â–∏–µ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–æ&nbsp;–≤—Å–µ—Ö –ú—è—Ç–∞—Ö, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å
      —Å—á—ë—Ç&nbsp;‚Äî –ø–æ–∫–∞–∂–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—É –∫–∞—Ä—Ç—É –∏–ª–∏ —Å–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    </>
  ) : (
    <>
      –ë–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–æ&nbsp;–≤—Å–µ—Ö –ú—è—Ç–∞—Ö; –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å
      —Å—á—ë—Ç&nbsp;‚Äî –ø–æ–∫–∞–∂–∏—Ç–µ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—É –∫–∞—Ä—Ç—É –∏–ª–∏ —Å–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    </>
  );

  return (
    <BalanceSt>
      <Title>{title}</Title>
      <BalanceDescription>{description}</BalanceDescription>

      {hasSuperBalance && (
        <>
          <Title2>–°—É–ø–µ—Ä-–±–∞–ª–ª—ã üåü</Title2>
          <BalanceDescription>
            –í&nbsp;—ç—Ç–∏—Ö –ú—è—Ç–∞—Ö –≤—ã&nbsp;&mdash; –ª—é–±–∏–º—ã–π –∫–ª–∏–µ–Ω—Ç –∏&nbsp;–ø–æ—ç—Ç–æ–º—É
            —É&nbsp;–≤–∞—Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
          </BalanceDescription>

          <FlatList
            data={superBalance}
            keyExtractor={({ place }) => String(place.title)}
            renderItem={renderBalance}
            ItemSeparatorComponent={Separator}
          />

          <FAQ>
            <FAQTitle>–ö–∞–∫ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è —Å—É–ø–µ—Ä-–±–∞–ª–ª—ã üåü, –∞ –∫–∞–∫ ‚Äî –æ–±—â–∏–µ?</FAQTitle>
            <FAQDescription>
              –ö–æ–≥–¥–∞ –≤—ã&nbsp;–∑–∞–∫—Ä—ã–≤–∞–µ—Ç–µ —Å—á—ë—Ç –≤&nbsp;–ª—é–±–∏–º–æ–π –ú—è—Ç–µ,
              —Ç–æ&nbsp;–∏–∑&nbsp;–∫—ç—à–±—ç–∫–∞ –≤&nbsp;—ç—Ç–æ–π –ú—è—Ç–µ 70% —É—Ö–æ–¥—è—Ç –Ω–∞&nbsp;–µ—ë
              –±–∞–ª–∞–Ω—Å, –∞&nbsp;30%&nbsp;‚Äî –Ω–∞&nbsp;–æ–±—â–∏–π.
            </FAQDescription>
            <FAQDescription>
              {renderFAQDescription({ superBalance })}
            </FAQDescription>
          </FAQ>
        </>
      )}
    </BalanceSt>
  );
}

const Visit = styled.TouchableOpacity`
  display: flex;
  justify-content: space-between;
  flex-direction: row;
`;

const VisitDescription = styled.View``;

const VisitPlace = styled.Text`
  color: #fff;
  font-size: 18;
`;

const VisitDate = styled.Text`
  color: rgba(255, 255, 255, 0.4);
  margin-top: 4;
`;

const VisitBalanceChange = styled.Text`
  font-variant: tabular-nums;
  color: #fff;
  font-size: 24;
`;

const renderBalanceChange = ({ added, decreased }) => {
  if (added) return `+${added}`;
  if (decreased) return `‚àí${decreased}`;

  return null;
};

function renderVisit({ item }) {
  return (
    <Visit>
      <VisitDescription>
        <VisitPlace>{item.place.title}</VisitPlace>
        <VisitDate>
          {format(item.createdAt, 'D MMMM [–≤] HH:mm', { locale })}
        </VisitDate>
      </VisitDescription>
      <VisitBalanceChange>{renderBalanceChange(item)}</VisitBalanceChange>
    </Visit>
  );
}

const VisitsSt = styled.View``;

function Visits({ user: { visits = [] } }) {
  return (
    <VisitsSt>
      <Title>–ú–æ–∏ –ø–æ—Å–µ—â–µ–Ω–∏—è</Title>

      <FlatList
        data={orderBy(visits, 'createdAt', 'desc')}
        keyExtractor={({ createdAt }) => String(createdAt)}
        renderItem={renderVisit}
        ItemSeparatorComponent={Separator}
      />
    </VisitsSt>
  );
}

const CodeWrapper = styled.View`
  display: flex;
  align-items: center;
  margin-top: 16;
  margin-bottom: 42;
`;

export default function ({ navigation }) {
  const user = navigation.getParam('user');

  return (
    <UICard onGoBack={() => navigation.goBack()}>
      <CodeWrapper>
        <QRCode
          color="#20B4AB"
          backgroundColor="transparent"
          logo={logoImg}
          logoSize={64}
          size={192}
          content={user.formattedPhoneNumber}
          codeStyle="circle"
          outerEyeStyle="circle"
          innerEyeStyle="circle"
        />
      </CodeWrapper>

      {user && <Balance user={user} />}
      {user && <Visits user={user} />}
    </UICard>
  );
}
